package com.iems5722.group5.AsyncTasks;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.media.ExifInterface;
import android.media.MediaScannerConnection;
import android.net.Uri;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.Toast;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.ByteBuffer;
import java.text.SimpleDateFormat;
import java.util.Date;
//import org.apache.http.*;

/**
 * Created by AlexLiu on 7/4/17.
 */

public class UploadFileAsyncTask extends AsyncTask<String, Void, String> {
    private Activity acty;
    private String roomId;
    private String userId;
    private String userName;
    private String filePath;
    private String fileName;

    public UploadFileAsyncTask(Activity activity, String roomId, String userId, String userName,
                               String path, String name) {
        acty = activity;
        this.roomId = roomId;
        this.userId = userId;
        this.userName = userName;
        filePath = path;
        fileName = name;
    }

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
    }

    @Override
    protected String doInBackground(String... params){
        String responseString = null;


        HttpURLConnection conn = null;
        DataOutputStream os = null;
        DataInputStream inputStream = null;


        int bytesRead, bytesAvailable, bufferSize, bytesUploaded = 0;
        byte[] buffer;
        int maxBufferSize = 2*1024*1024;

        String uploadname = "/storage/emulated/0/DCIM/Camera/IMG_20170407_054847.jpg";

        try
        {
            FileInputStream fis = new FileInputStream(new File(filePath + "/" + fileName) );

            bytesAvailable = fis.available();


            URL url = new URL(params[0]);
            conn = (HttpURLConnection) url.openConnection();
            //conn.setChunkedStreamingMode(maxBufferSize);

            // POST settings.
            conn.setDoInput(true);
            conn.setDoOutput(true);
            conn.setUseCaches(false);
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Connection", "Keep-Alive");
            Integer len = new Integer(bytesAvailable);
            conn.setRequestProperty("Content-Length", len.toString());
            conn.setRequestProperty("chatroom_id", roomId);
            conn.setRequestProperty("user_id", userId);
            conn.setRequestProperty("name", userName);
            SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmssSSS");
            conn.setRequestProperty("timestamp", sdf.format(new Date()));
            conn.connect();

            os = new DataOutputStream(conn.getOutputStream());

            System.out.println("available: " + String.valueOf(bytesAvailable));
            bufferSize = Math.min(bytesAvailable, maxBufferSize);
            buffer = new byte[bufferSize];

            bytesRead = fis.read(buffer, 0, bufferSize);


            bytesUploaded += bytesRead;
            while (bytesRead > 0) {
                os.write(buffer, 0, bufferSize);
                bytesAvailable = fis.available();
                bufferSize = Math.min(bytesAvailable, maxBufferSize);
                bytesRead = fis.read(buffer, 0, bufferSize);
                bytesUploaded += bytesRead;
            }

            System.out.println("uploaded: "+String.valueOf(bytesUploaded));
            fis.close();
            os.flush();
            os.close();

            // Responses from the server (code and message)
            conn.setConnectTimeout(2000); // allow 2 seconds timeout.
            int rcode = conn.getResponseCode();
            //if (rcode == 200) Toast.makeText(getApplicationContext(), "Success!!", Toast.LENGTH_LONG).show();
            //else Toast.makeText(getApplicationContext(), "Failed!!", Toast.LENGTH_LONG).show();
            //Toast.makeText(getApplicationContext(), "Record Uploaded!", Toast.LENGTH_LONG).show();

        }
        catch (Exception ex)
        {
            Log.d("========", ex.getMessage());
            ex.printStackTrace();
            //return false;
        }

        return responseString;
    }
}